name: Publish and Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "package.json"
      - ".github/workflows/**"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Needed for publishing
      id-token: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "latest"
          registry-url: "https://npm.pkg.github.com"

      - name: Install Dependencies
        run: npm install

      - name: Test (is that important?)
        run: npm test

      - name: Build TypeScript
        run: npm run build --declaration

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish_npm:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write # Needed for publishing to npm

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "latest"
          registry-url: "https://npm.pkg.github.com"

      - name: Download Built Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to GitHub Packages
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write # Needed for GitHub Releases

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Built Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Upload Build Artifacts to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**
          tag_name: ${{ github.ref_name }}
          body: "Automated release for ${{ github.ref_name }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy_cdn:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write # Needed for pushing to another branch

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensure we can push a new branch

      - name: Download Built Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Push to `cdn` Branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Create a new orphan branch for `cdn`
          git checkout --orphan cdn

          git rm -rf .  # Remove all files
          # checkout package.json
          git checkout package.json

          mv dist/* .  # Move compiled files to root

          git add .
          git commit -m "Deploy compiled assets to cdn branch"
          git push --force origin cdn  # Force push the `cdn` branch
          # get the package.json version
          version=v$(jq -r '.version' package.json)
          # create a new tag
          git tag $version
          git push origin $version
